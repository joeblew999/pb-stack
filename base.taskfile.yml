# https://taskfile.dev

version: '3'

vars:
  # OS
  # '/bin/zsh'  
  BASE_SHELL: '{{.SHELL}}'
  BASE_SHELL_OS_NAME:
    sh: uname -s | tr A-Z a-z
  BASE_SHELL_OS_ARCH:
    sh: uname -m | tr A-Z a-z
  BASE_GOOS_NAME:
    sh: go env GOOS
  BASE_GOOS_ARCH:
    sh: go env GOARCH

  # OS User
  BASE_HOME: '{{.HOME}}'
  # 'apple'
  BASE_USER: '{{.USER}}'

  # Project (always named like project root '_' cmd path), as in go projects cmd is the entry point. 
  BASE_SRC_NAME: base_name

  # Our dot folders.
  # We want this to be where the Task file is.
  BASE_SRC: '{{.USER_WORKING_DIR}}'
  # We want BIN near the SRC
  BASE_BIN_NAME: '.bin'
  BASE_BIN: '{{.BASE_SRC}}/{{.BASE_BIN_NAME}}'
  
  # We want DEP in root
  BASE_DEP_NAME: '.dep'
  BASE_DEP: '{{.TASKFILE_DIR}}/{{.BASE_DEP_NAME}}'

  # We want PACKS near the SRC and BIN
  BASE_PACK_NAME: '.pack'
  BASE_PACK: '{{.BASE_SRC}}/{{.BASE_PACK_NAME}}'


  # Lastly, calculate the OS Paths, so we do not pollute the OS.
  # Windows PS its "$env:Path" get whats on the PATH
  BASE_PATH: '{{.PATH}}:{{.BASE_DEP}}:{{.BASE_BIN}}'

  # Simple wrapper to apply defaults.
  # https://github.com/go-task/task/releases/tag/v3.42.1
  BASE_TASK_VERSION: v3.42.1
  BASE_TASK_CMD: '{{.TASK_EXE}} --yes'

  ### shell : Our base helpers ( many to help with cross OS differences, cause u-root is not good enough )
  BASE_SHELL_WHICH_BIN_NAME: shell-which
  BASE_SHELL_WHICH_BIN_VERSION: latest

  BASE_SHELL_REPLACE_BIN_NAME: shell-replace
  BASE_SHELL_REPLACE_BIN_VERSION: latest

  BASE_SHELL_TREE_BIN_NAME: shell-tree
  BASE_SHELL_TREE_BIN_VERSION: latest

  BASE_SHELL_WGOT_BIN_NAME: shell-wgot
  BASE_SHELL_WGOT_BIN_VERSION: latest

env:
  # export Path to include our .bin and .dep
  #export PATH:=$(PATH):$(BASE_BIN):$(BASE_DEP)
  #export PATH:=$(PATH):$(BASE_PWD_BIN)
  # https://github.com/go-task/task/issues/202

  #PATH: '{{.BASE_BIN}}:{{.BASE_DEP}}:{{.PATH}}'
  # try to make windows happy.
  PATH: '{{.PATH}}:{{.BASE_DEP}}:{{.BASE_BIN}}'
  
tasks:
  default:
    desc: base print
    cmds:
      - echo ''
      
      - echo ''
      - echo '- shell'
      - echo 'BASE_SHELL:'            {{.BASE_SHELL}}
      - echo 'BASE_SHELL_OS_NAME:'    {{.BASE_SHELL_OS_NAME}}
      - echo 'BASE_SHELL_OS_ARCH:'    {{.BASE_SHELL_OS_ARCH}}
      - echo 'BASE_GOOS_NAME:'        {{.BASE_GOOS_NAME}}
      - echo 'BASE_GOOS_ARCH:'        {{.BASE_GOOS_ARCH}}
      - echo ''
      - echo '- user'
      - echo 'BASE_HOME:'             {{.BASE_HOME}}
      - echo 'BASE_USER:'             {{.BASE_USER}}
      
      - echo ''
      - echo 'BASE_SRC_NAME:'         {{.BASE_SRC_NAME}}
      - echo ''
      - echo 'BASE_SRC:'              {{.BASE_SRC}}
      - echo ''
      - echo 'BASE_BIN_NAME:'         {{.BASE_BIN_NAME}}
      - echo 'BASE_BIN:'              {{.BASE_BIN}}
      - echo ''
      - echo 'BASE_DEP_NAME:'         {{.BASE_DEP_NAME}}
      - echo 'BASE_DEP:'              {{.BASE_DEP}}
      - echo ''
      - echo 'BASE_PACK_NAME:'        {{.BASE_PACK_NAME}}
      - echo 'BASE_PACK:'             {{.BASE_PACK}}
      - echo ''
      - echo ''
      - echo 'PATH:'                  {{.PATH}}
      - echo ''
      - echo 'BASE_PATH:'             {{.BASE_PATH}}
      - echo ''
      - echo 'BASE_TASK_VERSION:'     {{.BASE_TASK_VERSION}}
      - echo 'BASE_TASK_CMD:'         {{.BASE_TASK_CMD}}
      
      - echo ''
      - echo ''
      - echo '- task'
      - echo ''
      - echo '- task bin'
      - echo ''
      # https://taskfile.dev/reference/environment/
      - echo '- task env'
      - echo 'TASK_TEMP_DIR:'         {{.TASK_TEMP_DIR}}
      - echo 'TASK_REMOTE_DIR:'       {{.TASK_REMOTE_DIR}}
      - echo 'TASK_OFFLINE:'          {{.TASK_OFFLINE}}
      - echo 'FORCE_COLOR:'           {{.FORCE_COLOR}}
      
      
      - echo ''
      # https://taskfile.dev/reference/templating/#special-variables
      - echo '- task vars'
      # Contain all extra arguments passed after -- when calling Task through the CLI.
      - echo 'CLI_ARGS:'              {{.CLI_ARGS}}
      # A boolean containing whether the --force or --force-all flags were set.
      - echo 'CLI_FORCE:'             {{.CLI_FORCE}}
      # A boolean containing whether the --silent flag was set.
      - echo 'CLI_SILENT:'            {{.CLI_SILENT}}
      # A boolean containing whether the --verbose flag was set.
      - echo 'CLI_VERBOSE:'           {{.CLI_VERBOSE}}
      # A boolean containing whether the --offline flag was set.
      - echo 'CLI_OFFLINE:'           {{.CLI_OFFLINE}}
      - echo ''
      # The name of the current task.
      - echo 'The name of the current task:'  
      - echo 'TASK:'                  {{.TASK}}
      # The alias used for the current task, otherwise matches TASK.
      - echo 'The alias used for the current task, otherwise matches TASK:'  
      - echo 'ALIAS:'                 {{.ALIAS}}
      # The Task executable name or path.
      - echo 'TASK_EXE:'              {{.TASK_EXE}}
      # The absolute path of the root Taskfile
      - echo 'ROOT_TASKFILE:'         {{.ROOT_TASKFILE}}
      # The absolute path of the root Taskfile directory
      - echo 'ROOT_DIR:'              {{.ROOT_DIR}}
      # The absolute path of the included Taskfile.
      - echo 'TASKFILE:'              {{.TASKFILE}}
      # The absolute path of the included Taskfile directory.
      - echo 'TASKFILE_DIR:'          {{.TASKFILE_DIR}}
      # The absolute path of the directory where the task is executed.
      - echo 'TASK_DIR:'              {{.TASK_DIR}}
      # The absolute path of the directory task was called from.
      - echo 'USER_WORKING_DIR:'      {{.USER_WORKING_DIR}}
      # The checksum of the files listed in sources. Only available within the status prop and if method is set to checksum.
      - echo 'CHECKSUM:'              {{.CHECKSUM}}
      # The date object of the greatest timestamp of the files listed in sources. Only available within the status prop and if method is set to timestamp.
      - echo 'TIMESTAMP:'             {{.TIMESTAMP}}
      # The current version of task.
      - echo 'TASK_VERSION:'          {{.TASK_VERSION}}
      # The value of the current iteration when using the for property. Can be changed to a different variable name using as:.
      - echo 'ITEM:'                  {{.ITEM}}
      # Available exclusively inside the defer: command. Contains the failed command exit code. Only set when non-zero.
      - echo 'EXIT_CODE:'             {{.EXIT_CODE}}
    silent: true

  upgrade:
    desc: base upgrade, upgrades task.
    cmds:
      - echo ''
      - echo 'Upgrading base ...'
      - echo ''
      - echo '1. Installing latest Task ...'
      # https://github.com/go-task/task/releases/tag/v3.42.1
      #- go install github.com/go-task/task/v3/cmd/task@latest
      - '{{.GO_BIN_NAME}} install github.com/go-task/task/v3/cmd/task@{{.BASE_TASK_VERSION}}'
      # TODO: Flip to Winget for Windows, as all windows have it. winget install Task.Task
    silent: false

  test:
    desc: base test, checks that base is working.
    cmds:
      - echo ''
      - echo 'testing base  ...'
      - '{{.BASE_TASK_CMD}} base:clean'
      - '{{.BASE_TASK_CMD}} base:bin'
      - '{{.BASE_TASK_CMD}} base:shell-which-test'
    silent: false

  clean:
    desc: base clean, cleans the base folders.
    cmds:
      - echo ''
      - echo 'cleaning base  ...'
      - rm -rf *{{.BASE_BIN}}
      - rm -rf *{{.BASE_DEP}}
      - rm -rf *{{.BASE_PACK}}
    silent: false
  clean-list:
    desc: base clean list, lists what is cleaned from the base folders.
    cmds:
      - echo ''
      - echo 'cleaning base  ...'
      - ls -al {{.BASE_BIN}}
      - ls -al *{{.BASE_DEP}}
      - ls -al *{{.BASE_PACK}}
    silent: false

  bin:
    desc: base bin, installs shell level components.
    cmds:
      - echo ''
      - echo 'installing base shell tools ...'
      - echo ''
      - echo '1. Creating base folders ...'
      - mkdir -p {{.BASE_BIN}}
      - mkdir -p {{.BASE_DEP}}
      - mkdir -p {{.BASE_PACK}}
      - echo ''
      - echo '2. Installing base shell tools ...'
      - echo ''
      - echo '- which tool ...'
      # https://github.com/hairyhenderson/go-which/tree/main/cmd
      - env GOBIN={{.BASE_DEP}} {{.GO_BIN_NAME}} install github.com/hairyhenderson/go-which/cmd/which@{{.BASE_SHELL_WHICH_BIN_VERSION}}
      - mv {{.BASE_DEP}}/which {{.BASE_DEP}}/{{.BASE_SHELL_WHICH_BIN_NAME}}
      - echo ''
      - echo '- tree tool ...'
      # https://github.com/a8m/tree/cmd/tree
      - env GOBIN={{.BASE_DEP}} {{.GO_BIN_NAME}} install github.com/a8m/tree/cmd/tree@{{.BASE_SHELL_TREE_BIN_VERSION}}
      - mv {{.BASE_DEP}}/tree {{.BASE_DEP}}/{{.BASE_SHELL_TREE_BIN_NAME}}
      - echo '- wgot tool ...'
      # https://github.com/a8m/tree/cmd/tree
      - env GOBIN={{.BASE_DEP}} {{.GO_BIN_NAME}} install github.com/bitrise-io/got/cmd/wgot@{{.BASE_SHELL_WGOT_BIN_VERSION}}
      - mv {{.BASE_DEP}}/wgot {{.BASE_DEP}}/{{.BASE_SHELL_WGOT_BIN_NAME}}
      # https://github.com/webdevops/go-replace
      - env GOBIN={{.BASE_DEP}} {{.GO_BIN_NAME}} install github.com/webdevops/go-replace@{{.BASE_SHELL_REPLACE_BIN_VERSION}}
      - mv {{.BASE_DEP}}/go-replace {{.BASE_DEP}}/{{.BASE_SHELL_REPLACE_BIN_NAME}}

      - echo ''
      - echo 'TODO - add the other tools after we sort out the SHELL and BIN Naming to be cross platform  ...'

  bin-list:
    desc: base bin list, lists what is installed in the bin folders.
    cmds:
      - echo ''
      - echo 'listing base shell tools ...'
      - echo ''
      - '{{.BASE_TASK_CMD}} base:shell-tree -- {{.BASE_BIN}}'
      - ls -al {{.BASE_BIN}}
      - ls -al {{.BASE_DEP}}
      - ls -al {{.BASE_PACK}}
    silent: false
    
  shell-replace-h:
    desc: replace is a cross platform **replace** command.
    cmds:
      - '{{.BASE_SHELL_REPLACE_BIN_NAME}} --help'
  shell-replace:
    desc: replace is a cross platform **replace** command. E.G task base:shell-replace -- aa
    cmds:
      - '{{.BASE_SHELL_REPLACE_BIN_NAME}} {{.CLI_ARGS}}'
      

  shell-tree-h:
    desc: tree is a cross platform **tree** command.
    cmds:
      - '{{.BASE_SHELL_TREE_BIN_NAME}} --help'
  shell-tree:
    desc: tree is a cross platform **tree** command. E.G task base:shell-tree -- {{.BASE_BIN}}
    cmds:
      - '{{.BASE_SHELL_TREE_BIN_NAME}} -a -l  --dirsfirst -C'

  shell-wgot-h:
    desc: wgot is a cross platform **wget** command.
    cmds:
      - '{{.BASE_SHELL_WGOT_BIN_NAME}} --help'
  shell-wgot:
    desc: wgot is a cross platform **wget** command. E:G task base:shell-wgot -- https://example.com/file.mp4
    cmds:
      # https://github.com/bitrise-io/got
      # got -o /path/to/save https://example.com/file.mp4
      - '{{.BASE_SHELL_WGOT_BIN_NAME}} {{.CLI_ARGS}}'

  shell-which-h:
    desc: which is a cross platform **which** command.
    cmds:
      - '{{.BASE_SHELL_WHICH_BIN_NAME}} -h'
  shell-which:
    desc: find binary. E.G task base:shell-which -- which
    cmds:
      - '{{.BASE_SHELL_WHICH_BIN_NAME}} {{.CLI_ARGS}}'
  shell-which-test:
    desc: test finds the task binary.
    cmds:
      - '{{.TASK_EXE}} base:shell-which -- {{.TASK_EXE}}'

