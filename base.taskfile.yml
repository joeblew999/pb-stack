# https://taskfile.dev

version: "3"

vars:
  # OS
  # "/bin/zsh"  
  BASE_SHELL: "{{.SHELL}}"
  BASE_SHELL_OS_NAME:
    sh: uname -s | tr A-Z a-z
  BASE_SHELL_OS_ARCH:
    sh: uname -m | tr A-Z a-z
  BASE_GOOS_NAME:
    sh: go env GOOS
  BASE_GOOS_ARCH:
    sh: go env GOARCH

  # OS User
  BASE_HOME: "{{.HOME}}"
  # "apple"
  BASE_USER: "{{.USER}}"

  # Project 
  BASE_SRC_NAME: base_name

  # Our dot folders.
  BASE_SRC: '{{.USER_WORKING_DIR}}'
  BASE_BIN: '{{.BASE_SRC}}/{{.DEP}}.bin'
  BASE_DEP: '{{.BASE_SRC}}/{{.DEP}}.dep'
  BASE_PACK: '{{.BASE_SRC}}/{{.DEP}}.pack'

  # Our base helpers
  BASE_AMP_WHICH_BIN_NAME: amp-which
  BASE_AMP_WHICH_BIN_VERSION: latest

  

env:
  # export Path to include our .bin and .dep
  #export PATH:=$(PATH):$(BASE_BIN):$(BASE_DEP)
  #export PATH:=$(PATH):$(BASE_PWD_BIN)
  # https://github.com/go-task/task/issues/202

  #PATH: "{{.BASE_BIN}}:{{.BASE_DEP}}:{{.PATH}}"
  # try to make windows happy.
  #PATH: "{{.PATH}}:{{.BASE_DEP}}"
  
tasks:
  default:
    desc: base print
    cmds:
      - echo ""
      - echo ""
      - echo "- shell"
      - echo "BASE_SHELL:"            {{.BASE_SHELL}}
      - echo "BASE_SHELL_OS_NAME:"    {{.BASE_SHELL_OS_NAME}}
      - echo "BASE_SHELL_OS_ARCH:"    {{.BASE_SHELL_OS_ARCH}}
      - echo "BASE_GOOS_NAME:"        {{.BASE_GOOS_NAME}}
      - echo "BASE_GOOS_ARCH:"        {{.BASE_GOOS_ARCH}}
      - echo ""
      - echo "- user"
      - echo "BASE_HOME:"             {{.BASE_HOME}}
      - echo "BASE_USER:"             {{.BASE_USER}}
      - echo ""
      - echo "BASE_PATH:"             {{.PATH}}
      - echo ""
      - echo "BASE_SRC_NAME:"         {{.BASE_SRC_NAME}}
      - echo ""
      - echo "BASE_SRC:"              {{.BASE_SRC}}
      - echo "BASE_BIN:"              {{.BASE_BIN}}
      - echo "BASE_DEP:"              {{.BASE_DEP}}
      - echo "BASE_PACK:"             {{.BASE_PACK}}
      - echo ""

      
      - echo "- task"
      - echo ""
      - echo "- task bin"
      
      
      - echo ""
      # https://taskfile.dev/reference/environment/
      - echo "- task env"
      - echo "TASK_TEMP_DIR:"         {{.TASK_TEMP_DIR}}
      - echo "TASK_REMOTE_DIR:"       {{.TASK_REMOTE_DIR}}
      - echo "TASK_OFFLINE:"          {{.TASK_OFFLINE}}
      - echo "FORCE_COLOR:"           {{.FORCE_COLOR}}
      
      
      - echo ""
      # https://taskfile.dev/reference/templating/#special-variables
      - echo "- task vars"
      # Contain all extra arguments passed after -- when calling Task through the CLI.
      - echo "CLI_ARGS:"              {{.CLI_ARGS}}
      # A boolean containing whether the --force or --force-all flags were set.
      - echo "CLI_FORCE:"             {{.CLI_FORCE}}
      # A boolean containing whether the --silent flag was set.
      - echo "CLI_SILENT:"            {{.CLI_SILENT}}
      # A boolean containing whether the --verbose flag was set.
      - echo "CLI_VERBOSE:"           {{.CLI_VERBOSE}}
      # A boolean containing whether the --offline flag was set.
      - echo "CLI_OFFLINE:"           {{.CLI_OFFLINE}}
      - echo ""
      # The name of the current task.
      - echo "The name of the current task:"  
      - echo "TASK:"                  {{.TASK}}
      # The alias used for the current task, otherwise matches TASK.
      - echo "The alias used for the current task, otherwise matches TASK:"  
      - echo "ALIAS:"                 {{.ALIAS}}
      # The Task executable name or path.
      - echo "TASK_EXE:"              {{.TASK_EXE}}
      # The absolute path of the root Taskfile
      - echo "ROOT_TASKFILE:"         {{.ROOT_TASKFILE}}
      # The absolute path of the root Taskfile directory
      - echo "ROOT_DIR:"              {{.ROOT_DIR}}
      # The absolute path of the included Taskfile.
      - echo "TASKFILE:"              {{.TASKFILE}}
      # The absolute path of the included Taskfile directory.
      - echo "TASKFILE_DIR:"          {{.TASKFILE_DIR}}
      # The absolute path of the directory where the task is executed.
      - echo "TASK_DIR:"              {{.TASK_DIR}}
      # The absolute path of the directory task was called from.
      - echo "USER_WORKING_DIR:"      {{.USER_WORKING_DIR}}
      # The checksum of the files listed in sources. Only available within the status prop and if method is set to checksum.
      - echo "CHECKSUM:"              {{.CHECKSUM}}
      # The date object of the greatest timestamp of the files listed in sources. Only available within the status prop and if method is set to timestamp.
      - echo "TIMESTAMP:"             {{.TIMESTAMP}}
      # The current version of task.
      - echo "TASK_VERSION:"          {{.TASK_VERSION}}
      # The value of the current iteration when using the for property. Can be changed to a different variable name using as:.
      - echo "ITEM:"                  {{.ITEM}}
      # Available exclusively inside the defer: command. Contains the failed command exit code. Only set when non-zero.
      - echo "EXIT_CODE:"             {{.EXIT_CODE}}
    silent: true


  dep:
    desc: base dep, installs shell level components.
    cmds:
      - echo ""
      - echo "installing base shell tools ..."
      - mkdir -p {{.BASE_BIN}}
      - mkdir -p {{.BASE_DEP}}
      - mkdir -p {{.BASE_PACK}}
      - echo "- base which dep"
      # https://github.com/hairyhenderson/go-which/tree/main/cmd
      - env GOBIN={{.BASE_DEP}} {{.GO_BIN_NAME}} install github.com/hairyhenderson/go-which/cmd/which@{{.BASE_AMP_WHICH_BIN_VERSION}}
      - mv {{.BASE_DEP}}/which {{.BASE_DEP}}/{{.BASE_AMP_WHICH_BIN_NAME}}

  run-which-h:
    desc: which is a cross platform **which** command.
    cmds:
      - '{{.BASE_AMP_WHICH_BIN_NAME}} -h'
  run-which:
    desc: find binary.
    cmds:
      - '{{.BASE_AMP_WHICH_BIN_NAME}} '

