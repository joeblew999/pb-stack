# yaml-language-server: $schema=https://taskfile.dev/schema.json

# go.taskfile.yml 

# Only need.
# go compiler
# garble
# go builds for native, wasm, 
# decent LDFLags structure, so we can pull Module as source and build and release using TASK structure. 


version: '3'

vars:
  ### bins 

  #GO_BIN_NAME: go
  GO_BIN_NAME: 'go{{.BASE_BINARY_EXTENSION}}'
  GO_BIN_WHICH: ''
    #sh: 'command -v {{.GO_BIN_NAME}}'
    #sh: '{{.BASE_TASK_CMD}} base:shell-which -- {{.GO_BIN_NAME}}'
  GO_BIN_VERSION: ''
    #sh: '{{.GO_BIN_NAME}} version'

  GO_ENV_ROOT_PATH:
    sh: '{{.GO_BIN_NAME}} env GOROOT'
  GO_ENV_PATH:
    sh: '{{.GO_BIN_NAME}} env GOPATH'
  #GO_ENV_BIN_PATH: '{{joinPath .GO_ENV_PATH "bin" }}'
  GO_ENV_BIN_PATH: '{{.GO_ENV_PATH}}/bin'

  ### garble

  # https://github.com/burrowers/garble
  GO_GARBLE_BIN_NAME: 'garble{{.BASE_BINARY_EXTENSION}}'
  # https://github.com/burrowers/garble/releases/tag/v0.14.2
  GO_GARBLE_BIN_VERSION: v0.14.2
  GO_GARBLE_BIN_WHICH: ''
    #sh: 'command -v {{.GO_GARBLE_BIN_NAME}}'
    #sh:  '{{.BASE_TASK_CMD}} base:shell-which -- {{.GO_GARBLE_BIN_NAME}}'
  GO_GARBLE_BIN_WHICH_VERSION: ''
    # Its too long and blows up task. # TODO Issue: https://github.com/burrowers/garble/issues/941 Will not fix.
    #sh: '{{.GO_GARBLE_BIN_NAME}} version'



  ### vars

  # path to src ( we add the repo name to the path )
  GO_VAR_SRC_ROOT_PATH: '{{.BASE_SRC_PATH}}/{{.GIT_VAR_SRC_REPO_NAME}}'
  #GO_VAR_SRC_ROOT_PATH: '{{joinPath .BASE_SRC_PATH .GIT_VAR_SRC_REPO_NAME }}'
  # path to main.go
  GO_VAR_SRC_MAIN_PATH: '{{.GO_VAR_SRC_ROOT_PATH}}/{{.GO_VAR_BIN_ENTRY_PATH}}'
  #GO_VAR_SRC_MAIN_PATH: '{{joinPath .GO_VAR_SRC_ROOT_PATH .GO_VAR_BIN_ENTRY_PATH }}'

  # go build variables
  GO_VAR_BIN_NAME: '{{ .GO_VAR_BIN_NAME | default "main" }}'
  GO_VAR_BIN_ENTRY_PATH: '{{ .GO_VAR_BIN_ENTRY_PATH | default "." }}'
  GO_VAR_BIN_MOD_PATH: '{{ .GO_VAR_BIN_ENTRY_PATH | default "." }}'
  # EX: "CGO_ENABLED=1"
  GO_VAR_BIN_FLAG_PRE: '{{ .GO_VAR_BIN_FLAG_PRE | default "CGO_ENABLED=0" }}'
  # -X flag requires argument of the form importpath.name=value
  # ex: -tags main -ldflags=-X
  GO_VAR_BIN_FLAG_POST: '{{ .GO_VAR_BIN_FLAG_POST | default "" }}'


  # native build variables
  GO_VAR_BIN_NATIVE_NAME: '{{.GO_VAR_BIN_NAME}}_{{.BASE_SHELL_OS_NAME}}_{{.BASE_SHELL_OS_ARCH}}'
  GO_VAR_BIN_NATIVE_PATH: '{{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NATIVE_NAME}}'
  GO_VAR_BIN_WASM_PATH: '{{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}_{{.BASE_BINARY_JS_WASM_EXTENSION}}'
  



tasks:
  default:
    desc: go print
    cmds:
      - echo ''
      - echo '- bin'
      - echo 'GO_BIN_NAME:'                 {{.GO_BIN_NAME}}
      - echo 'GO_BIN_WHICH:'                {{shellQuote .GO_BIN_WHICH}}
      - echo 'GO_BIN_VERSION:'              {{.GO_BIN_VERSION}}
      - echo ''
      - echo '- env'
      - echo 'GO_ENV_ROOT_PATH:'            {{shellQuote .GO_ENV_ROOT_PATH}}
      - echo 'GO_ENV_PATH:'                 {{shellQuote .GO_ENV_PATH}}
      - echo 'GO_ENV_BIN_PATH:'             {{shellQuote .GO_ENV_BIN_PATH}}
      
      - echo ''
      - echo '- garble bin'
      - echo 'GO_GARBLE_BIN_NAME:'          {{.GO_GARBLE_BIN_NAME}}
      - echo 'GO_GARBLE_BIN_VERSION:'       {{.GO_GARBLE_BIN_VERSION}}
      - echo 'GO_GARBLE_BIN_WHICH:'         {{shellQuote .GO_GARBLE_BIN_WHICH}}
      - echo 'GO_GARBLE_BIN_WHICH_VERSION:' {{.GO_GARBLE_BIN_WHICH_VERSION}}
      - echo ''
      - echo '- var'
      - echo ' -git'
      - echo 'GO_VAR_SRC_ROOT_PATH:'        {{shellQuote .GO_VAR_SRC_ROOT_PATH}}
      - echo '- src'
      - echo 'GO_VAR_SRC_ROOT_PATH:'        {{shellQuote .GO_VAR_SRC_ROOT_PATH}}
      - echo 'GO_VAR_SRC_MAIN_PATH:'        {{shellQuote .GO_VAR_SRC_MAIN_PATH}}
      - echo ''
      - echo '- bin'
      - echo 'GO_VAR_BIN_NAME:'             {{.GO_VAR_BIN_NAME}}
      - echo 'GO_VAR_BIN_ENTRY_PATH:'       {{shellQuote .GO_VAR_BIN_ENTRY_PATH}}
      - echo 'GO_VAR_BIN_MOD_PATH:'         {{shellQuote .GO_VAR_BIN_MOD_PATH}}
      - echo 'GO_VAR_BIN_FLAG_PRE:'         {{.GO_VAR_BIN_FLAG_PRE}}
      - echo 'GO_VAR_BIN_FLAG_POST:'        {{.GO_VAR_BIN_FLAG_POST}}
      - echo ''
      - echo '- native'
      - echo 'GO_VAR_BIN_NATIVE_NAME:'      {{.GO_VAR_BIN_NATIVE_NAME}}
      - echo 'GO_VAR_BIN_NATIVE_PATH:'      {{shellQuote .GO_VAR_BIN_NATIVE_PATH}}
      - echo 'GO_VAR_BIN_WASM_PATH:'        {{shellQuote .GO_VAR_BIN_WASM_PATH}}
      - echo ''
      - echo ''
    silent: true

### dep

  dep:
    desc: install deps
    cmds:
      - task go:garble:dep
  dep:which:
    desc: check deps
    cmds:
      - task base:shell-which -- {{.GO_BIN_NAME}}
      - task base:shell-which -- {{.GO_GARBLE_BIN_NAME}}

### mod
 
  mod:work:
    desc: go mod work
    cmds:
      - task go:mod:work:del
      # If .env has override use it. Otherwise use the ROOT
      - cd {{.USER_WORKING_DIR}} && touch go.work
      - cd {{.USER_WORKING_DIR}} && go work use ./{{.GIT_VAR_SRC_REPO_NAME}}
      - cd {{.USER_WORKING_DIR}} && go work use ./{{.GIT_VAR_SRC_REPO_NAME}}/{{.GO_VAR_BIN_ENTRY_PATH}}
  mod:work:del: 
    cmds:
      # ISSUE: This is not getting the same USER_WORKING_DIR. Not sure why.
      - cd {{.USER_WORKING_DIR}} && rm -f go.work
      - cd {{.USER_WORKING_DIR}} && rm -f go.work.sum
  mod:tidy:
    desc: go mod tidy
    cmds:
      - echo ''
      - echo 'mod tidy'
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && {{.GO_BIN_NAME}} mod tidy
      - echo ''
    silent: false
  mod:upgrade:
    desc: go mod upgrade
    cmds:
      - echo ''
      - echo 'mod upgrade ...'
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && {{.GO_BIN_NAME}} install github.com/oligot/go-mod-upgrade@latest
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && go-mod-upgrade{{.BASE_BINARY_EXTENSION}}
      - echo ''
    silent: false


  install:
    desc: go install. E.G task go:install -- github.com/oligot/go-mod-upgrade@latest
    cmds:
      - echo ''
      - echo 'installing go binary ... '
      - '{{.GO_BIN_NAME}} install {{.CLI_ARGS}}'
      - echo ''
    silent: false



### gable ( can make this an extension of bin later..)

  garble:dep:
    desc: garble install
    cmds:
      - echo ''
      - echo 'garble install'
      - '{{.GO_BIN_NAME}} install mvdan.cc/garble@{{.GO_GARBLE_BIN_VERSION}}'
      - echo ''
    silent: false

  garble:help:
    desc: garble help
    cmds:
      - echo ''
      - echo 'garble'
      - '{{.BASE_TASK_CMD}} go:garble:dep'
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && {{.GO_GARBLE_BIN_NAME}} -h
      - echo ''
    silent: false

  garble:
    desc: garble
    cmds:
      - echo ''
      - echo 'garble'
      - '{{.BASE_TASK_CMD}} go:garble:dep'
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && {{.GO_GARBLE_BIN_NAME}} build -o {{.GO_VAR_BIN_NATIVE_PATH}}
      - echo ''
    silent: false

  inspect:
    desc: inspect the garbled binary.
    cmds:
      - echo ''
      - echo 'garble'
      - '{{.BASE_TASK_CMD}} base:shell-redress -- {{.GO_VAR_BIN_NATIVE_PATH}}'
      - echo ''
    silent: false

  gen:
    desc: go generate
    cmds:
      - echo ''
      - echo 'gen'
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && {{.GO_BIN_NAME}} generate ./...
      - echo ''
    silent: false

### test

  test:
    desc: go test
    cmds:
      - echo ''
      - echo 'bin'
      - cd {{.GO_VAR_SRC_MAIN_PATH}}/{{.GO_VAR_BIN_ENTRY_PATH}} && {{.GO_BIN_NAME}} test -json > go_test_results.json
      - echo ''
    silent: false
  test:wasm:
    desc: go test wasm
    cmds:
      # see: https://go.dev/wiki/WebAssembly#running-tests-in-the-browser
      # https://github.com/agnivade/wasmbrowsertest
      - go install github.com/agnivade/wasmbrowsertest@latest
      - mv {{.GO_ENV_BIN_PATH}}/wasmbrowsertest{{.BASE_BINARY_EXTENSION}} $GOPATH/bin/go_js_wasm_exec{{.BASE_BINARY_EXTENSION}}
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=js GOARCH=wasm {{.GO_BIN_NAME}} test
    silent: false

### dev

  dev:help:
    desc: go dev help
    cmds:
      - echo ''
      - echo 'dev'
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && {{.GO_BIN_NAME}} run . -h
      - echo ''
    silent: false

  dev:native:
    desc: go dev
    cmds:
      - echo ''
      - echo 'dev'
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && {{.GO_BIN_NAME}} run .
      - echo ''
    silent: false
  
  dev:wasm:
    desc: go dev wasm
    cmds:
      - echo ''
      - echo 'dev wasm'
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=js GOARCH=wasm {{.GO_BIN_NAME}} run .
  dev:wasm-serve:
    desc: go dev wasm server with with CLI_ARGS support.
    cmds:
      # see: 
      # https://github.com/hajimehoshi/wasmserve
      - go install github.com/hajimehoshi/wasmserve@latest
      - echo ' http://localhost:8080/ '
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && wasmserve {{.CLI_ARGS}}
  dev:wasm-chrome:
    desc: go dev wasm in chrome with .CLI_ARGS support.
    cmds:
      - echo ''
      - echo 'dev wasm in chrome'
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && WASM_HEADLESS=off GOOS=js GOARCH=wasm {{.GO_BIN_NAME}} run . {{.CLI_ARGS}}

### bin

  bin:del:
    desc: deletes the .bin folder fully.
    cmds:
      - rm -rf {{.BASE_BIN_PATH}}

  bin:all:
    desc: build binary
    cmds:
      #- task base:dep
      - echo ''
      - echo 'bin all'
      # darwin
      - task go:bin:darwin
      # dragonfly
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=dragonfly GOARCH=amd64 {{.GO_VAR_BIN_FLAG_PRE}} {{.GO_BIN_NAME}} build {{.GO_VAR_BIN_FLAG_POST}} -o {{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}_{{.BASE_BINARY_DRAGONFLY_AMD64_EXTENSION}}
      # netbsd
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=netbsd GOARCH=amd64 {{.GO_VAR_BIN_FLAG_PRE}} {{.GO_BIN_NAME}} build {{.GO_VAR_BIN_FLAG_POST}} -o {{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}_{{.BASE_BINARY_NETBSD_AMD64_EXTENSION}}
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=netbsd GOARCH=arm64 {{.GO_VAR_BIN_FLAG_PRE}} {{.GO_BIN_NAME}} build {{.GO_VAR_BIN_FLAG_POST}} -o {{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}_{{.BASE_BINARY_NETBSD_ARM64_EXTENSION}}
      # openbsd
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=openbsd GOARCH=amd64 {{.GO_VAR_BIN_FLAG_PRE}} {{.GO_BIN_NAME}} build {{.GO_VAR_BIN_FLAG_POST}} -o {{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}_{{.BASE_BINARY_OPENBSD_AMD64_EXTENSION}}
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=openbsd GOARCH=arm64 {{.GO_VAR_BIN_FLAG_PRE}} {{.GO_BIN_NAME}} build {{.GO_VAR_BIN_FLAG_POST}} -o {{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}_{{.BASE_BINARY_OPENBSD_ARM64_EXTENSION}}
      # freebsd
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=freebsd GOARCH=amd64 {{.GO_VAR_BIN_FLAG_PRE}} {{.GO_BIN_NAME}} build {{.GO_VAR_BIN_FLAG_POST}} -o {{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}_{{.BASE_BINARY_FREEBSD_AMD64_EXTENSION}}
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=freebsd GOARCH=arm64 {{.GO_VAR_BIN_FLAG_PRE}} {{.GO_BIN_NAME}} build {{.GO_VAR_BIN_FLAG_POST}} -o {{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}_{{.BASE_BINARY_FREEBSD_ARM64_EXTENSION}}
      # linux
      - task go:bin:native:linux
      # windows
      - task go:bin:native:windows
      - echo ''
    silent: false

  bin:darwin:
    desc: build binary
    cmds:
      #- task base:dep
      - echo ''
      - echo 'bin darwin'
      # darwin
      #- cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=darwin GOARCH=amd64 {{.GO_VAR_BIN_FLAG_PRE}} {{.GO_BIN_NAME}} build {{.GO_VAR_BIN_FLAG_POST}} -o {{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}_{{.BASE_BINARY_DARWIN_AMD64_EXTENSION}}
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=darwin GOARCH=arm64 {{.GO_VAR_BIN_FLAG_PRE}} {{.GO_BIN_NAME}} build {{.GO_VAR_BIN_FLAG_POST}} -o {{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}_{{.BASE_BINARY_DARWIN_ARM64_EXTENSION}}
  bin:linux:
    desc: build linux
    cmds:
      #- task base:dep
      - echo ''
      - echo 'bin linux'
      # linux
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=linux GOARCH=amd64 {{.GO_VAR_BIN_FLAG_PRE}} {{.GO_BIN_NAME}} build {{.GO_VAR_BIN_FLAG_POST}} -o {{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}_{{.BASE_BINARY_LINUX_AMD64_EXTENSION}}
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=linux GOARCH=arm64 {{.GO_VAR_BIN_FLAG_PRE}} {{.GO_BIN_NAME}} build {{.GO_VAR_BIN_FLAG_POST}} -o {{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}_{{.BASE_BINARY_LINUX_ARM64_EXTENSION}}
  bin:windows:
    desc: build windows
    cmds:
      #- task base:dep
      - echo ''
      - echo 'bin windows'
      # windows
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=windows GOARCH=amd64 {{.GO_VAR_BIN_FLAG_PRE}} {{.GO_BIN_NAME}} build {{.GO_VAR_BIN_FLAG_POST}} -o {{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}_{{.BASE_BINARY_WINDOWS_AMD64_EXTENSION}}
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=windows GOARCH=arm64 {{.GO_VAR_BIN_FLAG_PRE}} {{.GO_BIN_NAME}} build {{.GO_VAR_BIN_FLAG_POST}} -o {{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}_{{.BASE_BINARY_WINDOWS_ARM64_EXTENSION}}


  bin:native:
    desc: build binary
    cmds:
      #- task go:mod:work
      - echo ''
      - echo 'bin'
      - echo GO_VAR_SRC_MAIN_PATH:'{{.GO_VAR_SRC_MAIN_PATH}}'
      - echo GO_VAR_BIN_NAME:'{{.GO_VAR_BIN_NAME}}'
      - echo

      - cd {{.GO_VAR_SRC_MAIN_PATH}} && {{.GO_VAR_BIN_FLAG_PRE}} {{.GO_BIN_NAME}} build {{.GO_VAR_BIN_FLAG_POST}} -o {{.GO_VAR_BIN_NATIVE_PATH}}
      - echo ''
    silent: false
  bin:native-del:
    cmds:
      - rm -f {{.GO_VAR_BIN_NATIVE_PATH}}

  bin:wasm:
    desc: build go wasm
    cmds:
      - echo ''
      - echo 'bin'
      - cd {{.GO_VAR_SRC_MAIN_PATH}} && GOOS=js GOARCH=wasm {{.GO_BIN_NAME}} build -o {{.GO_VAR_BIN_WASM_PATH}}
      - cp {{.GO_ENV_ROOT_PATH}}/lib/wasm/wasm_exec.js {{.BASE_BIN_PATH}}/wasm_exec.js
      - echo ''
  bin:wasm-del:
    cmds:
      - rm -f {{.GO_VAR_BIN_WASM_PATH}}
      - rm -f {{.BASE_BIN_PATH}}/wasm_exec.js

  
### run

  run:native:
    desc: run with CLI_ARGS support.
    cmds:
      - echo ''
      - echo 'run'
      - '{{.GO_VAR_BIN_NATIVE_PATH}} {{.CLI_ARGS}}'
      - echo ''
    silent: false
  run:web:
    desc: run static web server off .bin
    cmds:
      # see: https://go.dev/wiki/WebAssembly#getting-started
      - '{{.GO_BIN_NAME}} install github.com/shurcooL/goexec@latest'
      # FAILS with: go get github.com/shurcooL/go-goon
      - cd {{.BASE_BIN_PATH}} && goexec{{.BASE_BINARY_EXTENSION}} 'http.ListenAndServe(`:8080`, http.FileServer(http.Dir(`.`)))'
  run:wasm:
    desc: run wasm at cli level.
    cmds:
      # see: 
      # https://github.com/hajimehoshi/wasmserve
      - echo '# http://localhost:8080 '
      - go install github.com/hajimehoshi/wasmserve@latest
      - cd {{.BASE_BIN_PATH}} && wasmserve

  