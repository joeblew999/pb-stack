# yaml-language-server: $schema=https://taskfile.dev/schema.json

# go

# Only need.
# go compiler
# garble
# go builds for native, wasm, 
# decent LDFLags structure, so we can pull Module as source and build and release using TASK structure. 

# TODO
# Make golang builds a AMP package itself ? might make sense.

version: '3'

vars:
  GO_BIN_NAME: go
  GO_BIN_WHICH:
    sh: 'command -v {{.GO_BIN_NAME}}'
    #sh: '{{.BASE_TASK_CMD}} base:shell-which -- {{.GO_BIN_NAME}}'
  GO_BIN_VERSION:
    sh: '{{.GO_BIN_NAME}} version'
  GO_VAR_SRC_PATH: '{{.BASE_SRC_PATH}}'
  GO_VAR_BIN_NAME: '{{.BASE_SRC_NAME}}'
  GO_VAR_BIN_PATH: '{{.BASE_BIN_PATH}}/{{.BASE_SRC_NAME}}'

tasks:
  default:
    desc: go print
    cmds:
      - echo ''
      - echo '- bin'
      - echo 'GO_BIN_NAME:'       {{.GO_BIN_NAME}}
      - echo 'GO_BIN_WHICH:'      {{.GO_BIN_WHICH}}
      - echo 'GO_BIN_VERSION:'    {{.GO_BIN_VERSION}}

      - echo ''
      - echo '- env'

      - echo ''
      - echo '- var'
      - echo 'GO_VAR_SRC_PATH:'    {{.GO_VAR_SRC_PATH}}
      - echo 'GO_VAR_BIN_NAME:'    {{.GO_VAR_BIN_NAME}}
      - echo 'GO_VAR_BIN_PATH:'    {{.GO_VAR_BIN_PATH}}
    silent: true
  test:
    desc: go test
    cmds:
      - echo ''
      - echo 'bin'
      - cd {{.GO_VAR_SRC_PATH}} && {{.GO_BIN_NAME}} test -json > go_test_results.json
      - echo ''
    silent: false
  bin:
    desc: go build
    cmds:
      #- task base:dep
      - echo ''
      - echo 'bin'
      - cd {{.GO_VAR_SRC_PATH}} && {{.GO_BIN_NAME}} build -o {{.GO_VAR_BIN_PATH}}
      - echo ''
    silent: false
  run:
    desc: run
    cmds:
      - echo ''
      - echo 'run'
      - '{{.BASE_BIN_PATH}}/{{.GO_VAR_BIN_NAME}}'
      - echo ''
    silent: false
   