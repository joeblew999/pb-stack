# yaml-language-server: $schema=https://taskfile.dev/schema.json

# nats.taskfile.yml

version: '3'

env:
  
vars:
  ### bin
  NATS_SERVER_BIN_NAME: nats-server
  # https://github.com/nats-io/nats-server/releases/tag/v2.11.2
  NATS_SERVER_BIN_VERSION: v2.11.2
  #NATS_SERVER_BIN_WHICH: 
    #sh: 'which {{.NATS_SERVER_BIN_NAME}}'
  #NATS_SERVER_BIN_WHICH_VERSION:
    #sh: '{{.NATS_SERVER_BIN_NAME}} version'
  
  # https://github.com/nats-io/nats-server/releases/download/v2.11.2/nats-server-v2.11.2-darwin-arm64.tar.gz
  # TODO: adapt to each OS.
  NATS_SERVER_DEP_URL_COMPRESS_NAME: nats-server-{{.NATS_SERVER_BIN_VERSION}}-darwin-arm64.tar.gz
  NATS_SERVER_DEP_URL_FOLDER_NAME: nats-server-{{.NATS_SERVER_BIN_VERSION}}-darwin-arm64
  NATS_SERVER_DEP_URL_EXTRACT_NAME: nats-server
  NATS_SERVER_DEP_URL: https://github.com/nats-io/nats-server/releases/download/{{.NATS_SERVER_BIN_VERSION}}/{{.NATS_SERVER_DEP_URL_COMPRESS_NAME}}

  NATS_SERVER_DEP_LIST_URL: https://api.github.com/repos/nats-io/nats-server/releases/tags/{{.NATS_SERVER_BIN_VERSION}}

  # '{{ .VAR | default "value-from-child" }}'
  #NATS_SERVER_VAR_CONFIG_NAME: 'nats-server.conf' | default
  NATS_SERVER_VAR_CONFIG_NAME: '{{ .NATS_SERVER_VAR_CONFIG_NAME | default "nats-server.conf" }}'
  #NATS_SERVER_VAR_CONFIG_PATH: '{{.BASE_SRC_PATH}}'
  NATS_SERVER_VAR_CONFIG_PATH: '{{ .NATS_SERVER_VAR_CONFIG_PATH | default .BASE_SRC_PATH }}'
  NATS_SERVER_VAR_CONFIG_WHICH: '{{.NATS_SERVER_VAR_CONFIG_PATH}}/{{.NATS_SERVER_VAR_CONFIG_NAME}}'

tasks:
  default:
    desc:  print
    cmds:
      - echo ''
      - echo '- bin'
      - echo 'NATS_SERVER_BIN_NAME:'                   {{.NATS_SERVER_BIN_NAME}}
      - echo 'NATS_SERVER_BIN_VERSION:'                {{.NATS_SERVER_BIN_VERSION}}
      - echo 'NATS_SERVER_BIN_WHICH:'                  
      - 'which {{.NATS_SERVER_BIN_NAME}}'
      - echo 'NATS_SERVER_BIN_WHICH_VERSION:'          
      - '{{.NATS_SERVER_BIN_NAME}} version'
      - echo ''
      - echo '- dep'
      - echo 'NATS_SERVER_DEP_URL_COMPRESS_NAME:'      {{.NATS_SERVER_DEP_URL_COMPRESS_NAME}}
      - echo 'NATS_SERVER_DEP_URL_FOLDER_NAME:'        {{.NATS_SERVER_DEP_URL_FOLDER_NAME}}
      - echo 'NATS_SERVER_DEP_URL_EXTRACT_NAME:'       {{.NATS_SERVER_DEP_URL_EXTRACT_NAME}}
      - echo 'NATS_SERVER_DEP_URL:'                    {{.NATS_SERVER_DEP_URL}}

      - echo 'NATS_SERVER_DEP_LIST_URL:'               {{.NATS_SERVER_DEP_LIST_URL}}
      - echo ''
      - echo '- var'
      - echo 'NATS_SERVER_VAR_CONFIG_NAME:'             {{.NATS_SERVER_VAR_CONFIG_NAME}}
      - echo 'NATS_SERVER_VAR_CONFIG_PATH:'             {{.NATS_SERVER_VAR_CONFIG_PATH}}
      - echo 'NATS_SERVER_VAR_CONFIG_WHICH:'            {{.NATS_SERVER_VAR_CONFIG_WHICH}}
      
      - echo ''
    silent: true

  dep:
    desc: download and extract single.
    cmds:
      # download and extract
      - task base:shell-wgot-tocwd -- {{.NATS_SERVER_DEP_URL}}
      - task base:shell-arc-extract-tocwd -- {{.NATS_SERVER_DEP_URL_COMPRESS_NAME}}
      - mv {{.BASE_SRC_PATH}}/{{.NATS_SERVER_DEP_URL_FOLDER_NAME}}/{{.NATS_SERVER_DEP_URL_EXTRACT_NAME}} {{.BASE_DEP_PATH}}/{{.NATS_SERVER_BIN_NAME}}
      # cleanup
      - rm -f {{.BASE_SRC_PATH}}/{{.NATS_SERVER_DEP_URL_COMPRESS_NAME}}
      - rm -rf {{.BASE_SRC_PATH}}/{{.NATS_SERVER_DEP_URL_FOLDER_NAME}}
      - ls -al {{.BASE_DEP_PATH}}/{{.NATS_SERVER_BIN_NAME}}
    silent: false
  dep:all:
    desc: download and extract all.
    cmds:
      - task nats:dep:list
      - go install github.com/itchyny/gojq/cmd/gojq@latest
      - gojq -r '.assets[] | select(.name | contains("darwin")) | .browser_download_url' {{.BASE_SRC_PATH}}/github-releases-list.json
      - gojq -r '.assets[] | select(.name | contains("linux")) | .browser_download_url' {{.BASE_SRC_PATH}}/github-releases-list.json
      - gojq -r '.assets[] | select(.name | contains("windows")) | .browser_download_url' {{.BASE_SRC_PATH}}/github-releases-list.json
      # loop: https://taskfile.dev/usage/#looping-over-tasks
    silent: false
  dep:del:
    cmds:
      - rm -f {{.BASE_DEP_PATH}}/{{.NATS_SERVER_BIN_NAME}}
      - ls -al {{.BASE_DEP_PATH}}/{{.NATS_SERVER_BIN_NAME}}*
    silent: false
  dep:list:
    desc: download and extract all releases meta data from github.
    cmds:
      - task base:shell-wgot-github-releases-tocwd -- {{.NATS_SERVER_DEP_LIST_URL}} 
    silent: false
  
  run:
    desc: run
    cmds:
      - '{{.NATS_SERVER_BIN_NAME}} -h'
    silent: false
  run:serve:
    desc: run
    cmds:
      - '{{.NATS_SERVER_BIN_NAME}} -c {{.NATS_SERVER_VAR_CONFIG_NAME}}'
    silent: false


