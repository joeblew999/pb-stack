# yaml-language-server: $schema=https://taskfile.dev/schema.json

# docker.taskfile.yml 

### TODO:
# adapt docker makefile for extra bits we need.


version: '3'

env:
  # expects these your OS level
  #GITHUB_TOKEN: ????


  # override these in Root Taskfile.
  DOCKER_VAR_NAME: ????
  # For now, ONLY support Github, until we get our own working.
  DOCKER_VAR_REGISTRY: ghcr.io

vars:
  # bins
  # docker
  DOCKER_BIN_NAME: docker
  DOCKER_BIN_WHICH: 
  DOCKER_BIN_VERSION: 
    sh: '{{.DOCKER_BIN_NAME}} -v'
  # compose

  DOCKER_COMPOSE_BIN_NAME: docker-compose
  DOCKER_COMPOSE_BIN_WHICH:
  DOCKER_COMPOSE_BIN_VERSION:
    sh: '{{.DOCKER_COMPOSE_BIN_NAME}} -v'
  

  ### env vars
  DOCKER_VAR_REGISTRY_USERNAME: '?'
  DOCKER_VAR_REGISTRY_PASSWORD: '?'

  DOCKER_BUILDER: buildx-multi-arch
  
  # vars
  DOCKER_VAR_BASE_DIR:
    sh: pwd
  DOCKER_VAR_TASKFILE_VERSION:
    sh: 'echo {{ .DOCKER_VAR_TASKFILE_VERSION | default "latest" }}'
  DOCKER_VAR_INCLUDE_LATEST_TAG:
    sh: 'echo {{ .DOCKER_VAR_INCLUDE_LATEST_TAG | default "false" }}'
  DOCKER_VAR_IMAGE_BASE:
    sh: echo {{.DOCKER_VAR_REGISTRY}}/{{.DOCKER_VAR_NAME}}
  DOCKER_VAR_IMAGE_VERSION:
    sh: echo {{.DOCKER_VAR_IMAGE_BASE}}:{{.DOCKER_VAR_TASKFILE_VERSION}}
  DOCKER_VAR_CONDITIONAL_LATEST_TAG:
    sh: |
      if [ "{{.DOCKER_VAR_INCLUDE_LATEST_TAG}}" = "true" ]; then
        echo "-t {{.DOCKER_VAR_IMAGE_BASE}}:latest"
      else
        echo ""
      fi

tasks:
  default:
    desc: docker print
    cmds:
      - echo ''
      - echo '- docker bin'
      - echo ''
      - echo '- docker'
      - echo 'DOCKER_BIN_NAME:'                 {{.DOCKER_BIN_NAME}}
      - echo 'DOCKER_BIN_WHICH:'                {{.DOCKER_BIN_WHICH}}
      - echo 'DOCKER_BIN_VERSION:'              {{.DOCKER_BIN_VERSION}}
      - echo ''
      - echo '- docker compose'
      - echo 'DOCKER_COMPOSE_BIN_NAME:'         {{.DOCKER_COMPOSE_BIN_NAME}}
      - echo 'DOCKER_COMPOSE_BIN_WHICH:'        {{.DOCKER_COMPOSE_BIN_WHICH}}
      - echo 'DOCKER_COMPOSE_BIN_VERSION:'      {{.DOCKER_COMPOSE_BIN_VERSION}}
      - echo ''
      - echo '- overrides (env)'
      - echo 'GITHUB_TOKEN:'                    {{.GITHUB_TOKEN}}
      - echo 'DOCKER_VAR_NAME:'                 {{.DOCKER_VAR_NAME}}
      - echo 'DOCKER_VAR_REGISTRY:'             {{.DOCKER_VAR_REGISTRY}}
      - echo ''
      - echo '- overrides (var)'
      - echo 'DOCKER_VAR_REGISTRY_USERNAME:'    {{.DOCKER_VAR_REGISTRY_USERNAME}}
      - echo 'DOCKER_VAR_REGISTRY_PASSWORD:'    {{.DOCKER_VAR_REGISTRY_PASSWORD}}
      - echo ''
      - echo '- vars'
      - echo 'DOCKER_VAR_BASE_DIR:'             {{.DOCKER_VAR_BASE_DIR}}
      - echo 'DOCKER_VAR_TASKFILE_VERSION:'     {{.DOCKER_VAR_TASKFILE_VERSION}}
      - echo 'DOCKER_VAR_INCLUDE_LATEST_TAG:'   {{.DOCKER_VAR_INCLUDE_LATEST_TAG}}
      - echo 'DOCKER_VAR_IMAGE_BASE:'           {{.DOCKER_VAR_IMAGE_BASE}}
      - echo 'DOCKER_VAR_IMAGE_VERSION:'        {{.DOCKER_VAR_IMAGE_VERSION}}
      - echo 'DOCKER_VAR_CONDITIONAL_LATEST_TAG:' {{.DOCKER_VAR_CONDITIONAL_LATEST_TAG}}
      - echo ''
    silent: true

  login:
    desc: "Login to the docker registry"
    cmds:
      - echo ''
      - echo '- docker login to registry'
      - echo ''
      # - echo {{.DOCKER_VAR_REGISTRY_PASSWORD}} | {{.DOCKER_BIN_NAME}} login -u {{.DOCKER_VAR_REGISTRY_USERNAME}} --password-stdin
      # NOTES: https://gist.github.com/yokawasa/841b6db379aa68b2859846da84a9643c

      - echo '{{.GITHUB_TOKEN}} | {{.DOCKER_BIN_NAME}} login {{.DOCKER_VAR_REGISTRY}} -u {{.DOCKER_VAR_REGISTRY_USERNAME}} --password-stdin' 

  setup-buildx:
    desc: Setup docker buildx. Use this !!
    cmds:
      - echo ''
      - echo '- docker buildx'
      - echo ''
      - '{{.DOCKER_BIN_NAME}} buildx create --use'
  inspect-buildx:
    desc: Inspect docker buildx.  Have not worked this out yet...  Dont use it.
    cmds:
      - echo ''
      - echo '- docker buildx inspect'
      - echo ''
      - '{{.DOCKER_BIN_NAME}} buildx inspect "{{.DOCKER_BUILDER}}" || {{.DOCKER_BIN_NAME}} buildx create --name="{{.DOCKER_BUILDER}}" --driver=docker-container --driver-opt=network=host'


  build:
    desc: Build the docker image"
    cmds:
      - '{{.DOCKER_BIN_NAME}} buildx build 
        -t {{.DOCKER_VAR_IMAGE_VERSION}} 
        {{.DOCKER_VAR_CONDITIONAL_LATEST_TAG}} 
        --platform linux/amd64,linux/arm64 
        --push 
        --build-arg DOCKER_VAR_TASKFILE_VERSION={{.DOCKER_VAR_TASKFILE_VERSION}} 
        --progress plain 
        -f Dockerfile 
        . '

  run:
    desc: "Run the docker image"
    cmds:
      - '{{.DOCKER_BIN_NAME}} run --rm -it -w {{.DOCKER_VAR_BASE_DIR}} -v {{.DOCKER_VAR_BASE_DIR}}:{{.DOCKER_VAR_BASE_DIR}} --env-file <(env) {{.IMAGE}}'